{"version":3,"file":"static/js/507.c5a523fe.chunk.js","mappings":"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","sources":["components/menus/basic.js","layout/BasicLayout.js","pages/place/read.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nconst Header = () => (\n    <div className=\"header\">\n        <Link className=\"header-item\" to=\"/main\">🏠 Home</Link>\n        <Link className=\"header-item\" to=\"/place/list\">여행지 정보</Link>\n        <Link className=\"header-item\" to=\"/board/list\">리뷰 목록</Link>\n        <Link className=\"header-item\" to=\"/mypage\">마이 페이지</Link>\n        <div className=\"header-icons\">\n            <Link to=\"/profile\">\n                <img src=\"/assets/user.jpg\" alt=\"Profile\" className=\"icon\" />\n            </Link>\n            <Link to=\"/settings\">\n                <img src=\"/assets/setting.jpg\" alt=\"Settings\" className=\"icon\" />\n            </Link>\n        </div>\n    </div>\n);\n\nconst Layout = ({ children }) => (\n    <div className=\"d-flex\" id=\"wrapper\">\n        <div id=\"page-content-wrapper\">\n            <Header />\n            {/* Page content */}\n            <div className=\"container-fluid\">\n                {children}\n            </div>\n        </div>\n    </div>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport BasicMenu from '../components/menus/basic';\n\nfunction BasicLayout({children}){\n    return(\n        <header>\n          <BasicMenu/>\n        <div>\n            <main>\n                {children}\n            </main>\n        </div>\n        </header>\n    )\n}\n\nexport default BasicLayout;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport BasicLayout from \"../../layout/BasicLayout\";\n\nconst PlaceRead = () => {\n    const { bno } = useParams();\n    const navigate = useNavigate();\n    const [place, setPlace] = useState(null);\n    const [replies, setReplies] = useState([]);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [showRegisterModal, setShowRegisterModal] = useState(false);\n    const [showModifyModal, setShowModifyModal] = useState(false);\n    const [replyText, setReplyText] = useState('');\n    const [replyToModify, setReplyToModify] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const { data } = await axios.get(`http://localhost:8080/api/place/${bno}`);\n                setPlace(data.place);\n                setReplies(data.replies);\n                setCurrentUser(data.currentUser);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n        fetchData();\n    }, [bno]);\n\n    const handleAddReply = async () => {\n        try {\n            await axios.post('/api/reply/add', { bno, replyText, replyer: currentUser.username });\n            setReplyText('');\n            setShowRegisterModal(false);\n            const { data } = await axios.get(`http://localhost:8080/api/replies?bno=${bno}`);\n            setReplies(data.replies);\n        } catch (error) {\n            console.error('Error adding reply:', error);\n        }\n    };\n\n    const handleModifyReply = async () => {\n        try {\n            await axios.put('/api/reply/modify', { bno, rno: replyToModify.rno, replyText });\n            setShowModifyModal(false);\n            setReplyToModify(null);\n            const { data } = await axios.get(`http://localhost:8080/api/replies?bno=${bno}`);\n            setReplies(data.replies);\n        } catch (error) {\n            console.error('Error modifying reply:', error);\n        }\n    };\n\n    const handleRemoveReply = async () => {\n        try {\n            await axios.delete(`/api/reply/remove`, { data: { bno, rno: replyToModify.rno } });\n            setShowModifyModal(false);\n            setReplyToModify(null);\n            const { data } = await axios.get(`http://localhost:8080/api/replies?bno=${bno}`);\n            setReplies(data.replies);\n        } catch (error) {\n            console.error('Error removing reply:', error);\n        }\n    };\n\n    return (\n        <BasicLayout>\n        <div className=\"container mt-3\">\n            {place && (\n                <div className=\"card\">\n                    <div className=\"card-header\">게시글 읽기</div>\n                    <div className=\"card-body\">\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">게시물 번호</label>\n                            <input type=\"text\" className=\"form-control\" value={place.bno} readOnly />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">제목</label>\n                            <input type=\"text\" className=\"form-control\" value={place.title} readOnly />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">내용</label>\n                            <textarea className=\"form-control\" rows=\"5\" value={place.content} readOnly />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">작성자</label>\n                            <input type=\"text\" className=\"form-control\" value={place.writer} readOnly />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">게시한 날짜</label>\n                            <input type=\"text\" className=\"form-control\" value={new Date(place.regDate).toLocaleString()} readOnly />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">수정한 날짜</label>\n                            <input type=\"text\" className=\"form-control\" value={new Date(place.modDate).toLocaleString()} readOnly />\n                        </div>\n                        <div className=\"d-flex justify-content-end\">\n                            <button className=\"btn btn-primary me-2\" onClick={() => navigate(`/place/list`)}>목록</button>\n                            {currentUser && currentUser.username === place.writer && (\n                                <button className=\"btn btn-secondary\" onClick={() => navigate(`/place/modify/${bno}`)}>수정</button>\n                            )}\n                        </div>\n                        <div className=\"my-4\">\n                            <button className=\"btn btn-info\" onClick={() => setShowRegisterModal(true)}>댓글 작성</button>\n                        </div>\n                        <ul className=\"list-group\">\n                            {replies.map(reply => (\n                                <li key={reply.rno} className=\"list-group-item d-flex\">\n                                    <span className=\"col-2\">{reply.rno}</span>\n                                    <span className=\"col-6\" onClick={() => {\n                                        setReplyToModify(reply);\n                                        setReplyText(reply.replyText);\n                                        setShowModifyModal(true);\n                                    }}>{reply.replyText}</span>\n                                    <span className=\"col-2\">{reply.replyer}</span>\n                                    <span className=\"col-2\">{new Date(reply.regDate).toLocaleString()}</span>\n                                </li>\n                            ))}\n                        </ul>\n                        <div className=\"my-4\">\n                            {/* 페이지 네비게이션 컴포넌트를 추가할 수 있습니다. */}\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* 댓글 등록 모달 */}\n            <div className={`modal fade ${showRegisterModal ? 'show d-block' : ''}`} tabIndex=\"-1\">\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">댓글 등록</h5>\n                            <button type=\"button\" className=\"btn-close\" onClick={() => setShowRegisterModal(false)}></button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"mb-3\">\n                                <label className=\"form-label\">댓글 내용</label>\n                                <input type=\"text\" className=\"form-control\" value={replyText} onChange={(e) => setReplyText(e.target.value)} />\n                            </div>\n                            <div className=\"mb-3\">\n                                <label className=\"form-label\">댓글 작성자</label>\n                                <input type=\"text\" className=\"form-control\" value={currentUser ? currentUser.username : ''} readOnly />\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddReply}>댓글 달기</button>\n                            <button type=\"button\" className=\"btn btn-outline-dark\" onClick={() => setShowRegisterModal(false)}>닫기</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* 댓글 수정/삭제 모달 */}\n            {replyToModify && (\n                <div className={`modal fade ${showModifyModal ? 'show d-block' : ''}`} tabIndex=\"-1\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">댓글 수정</h5>\n                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModifyModal(false)}></button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\">댓글 내용</label>\n                                    <input type=\"text\" className=\"form-control\" value={replyText} onChange={(e) => setReplyText(e.target.value)} />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-info\" onClick={handleModifyReply}>수정</button>\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={handleRemoveReply}>삭제</button>\n                                <button type=\"button\" className=\"btn btn-outline-dark\" onClick={() => setShowModifyModal(false)}>닫기</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n        </BasicLayout>\n    );\n};\n\nexport default PlaceRead;\n"],"names":["Header","_jsxs","className","children","_jsx","Link","to","src","alt","_ref","id","BasicMenu","PlaceRead","bno","useParams","navigate","useNavigate","place","setPlace","useState","replies","setReplies","currentUser","setCurrentUser","showRegisterModal","setShowRegisterModal","showModifyModal","setShowModifyModal","replyText","setReplyText","replyToModify","setReplyToModify","useEffect","async","data","axios","get","error","console","fetchData","BasicLayout","type","value","readOnly","title","rows","content","writer","Date","regDate","toLocaleString","modDate","onClick","username","map","reply","rno","replyer","tabIndex","onChange","e","target","post","put","delete"],"sourceRoot":""}