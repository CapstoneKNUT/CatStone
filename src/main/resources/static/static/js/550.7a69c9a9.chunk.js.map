{"version":3,"file":"static/js/550.7a69c9a9.chunk.js","mappings":"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","sources":["components/menus/basic.js","layout/BasicLayout.js","pages/board/list.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nconst Header = () => (\n    <div className=\"header\">\n        <Link className=\"header-item\" to=\"/main\">🏠 Home</Link>\n        <Link className=\"header-item\" to=\"/place/list\">여행지 정보</Link>\n        <Link className=\"header-item\" to=\"/board/list\">리뷰 목록</Link>\n        <Link className=\"header-item\" to=\"/mypage\">마이 페이지</Link>\n        <div className=\"header-icons\">\n            <Link to=\"/profile\">\n                <img src=\"/assets/user.jpg\" alt=\"Profile\" className=\"icon\" />\n            </Link>\n            <Link to=\"/settings\">\n                <img src=\"/assets/setting.jpg\" alt=\"Settings\" className=\"icon\" />\n            </Link>\n        </div>\n    </div>\n);\n\nconst Layout = ({ children }) => (\n    <div className=\"d-flex\" id=\"wrapper\">\n        <div id=\"page-content-wrapper\">\n            <Header />\n            {/* Page content */}\n            <div className=\"container-fluid\">\n                {children}\n            </div>\n        </div>\n    </div>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport BasicMenu from '../components/menus/basic';\n\nfunction BasicLayout({children}){\n    return(\n        <header>\n          <BasicMenu/>\n        <div>\n            <main>\n                {children}\n            </main>\n        </div>\n        </header>\n    )\n}\n\nexport default BasicLayout;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BasicLayout from \"../../layout/BasicLayout\"; // Link 컴포넌트 추가\n\nfunction BoardList() {\n    const [pageRequest, setPageRequest] = useState({\n        size: 10,\n        type: '',\n        location: '',\n        keyword: '',\n    });\n    const [responseData, setResponseData] = useState({\n        dtoList: [],\n        prev: false,\n        next: false,\n        start: 0,\n        end: 0,\n        page: 1,\n    });\n\n    useEffect(() => {\n        // 데이터를 받아오는 함수\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('http://localhost:8080/api/board/list', {\n                    params: pageRequest,\n                });\n                setResponseData(response.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n\n        fetchData();\n    }, [pageRequest]);\n\n    // 페이지 변경 함수\n    const handlePageChange = (pageNum) => {\n        setPageRequest((prev) => ({\n            ...prev,\n            page: pageNum,\n        }));\n    };\n\n    return (\n        <BasicLayout>\n        <div>\n            <div className=\"row mt-3\">\n                <form\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        // 데이터 요청을 위해 페이지 요청 정보를 업데이트\n                        // (현재 form submit은 별도의 동작을 하지 않음, 필요에 따라 추가 구현 가능)\n                    }}\n                >\n                    <div className=\"col\">\n                        <input type=\"hidden\" name=\"size\" value={pageRequest.size} />\n                        <div className=\"input-group\">\n                            <select\n                                className=\"form-select\"\n                                name=\"type\"\n                                value={pageRequest.type}\n                                onChange={(e) => setPageRequest({ ...pageRequest, type: e.target.value })}\n                            >\n                                <option value=\"\">---</option>\n                                <option value=\"t\">제목</option>\n                                <option value=\"c\">내용</option>\n                                <option value=\"w\">작성자</option>\n                                <option value=\"tc\">제목 내용</option>\n                                <option value=\"tcw\">제목 내용 작성자</option>\n                            </select>\n\n                            <select\n                                className=\"form-select\"\n                                name=\"location\"\n                                value={pageRequest.location}\n                                onChange={(e) => setPageRequest({ ...pageRequest, location: e.target.value })}\n                            >\n                                <option value=\"\">---</option>\n                                <option value=\"seoul\">서울</option>\n                                <option value=\"gg\">경기도</option>\n                                <option value=\"gwd\">강원도</option>\n                                {/* 다른 지역 선택 */}\n                            </select>\n\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"keyword\"\n                                value={pageRequest.keyword}\n                                onChange={(e) => setPageRequest({ ...pageRequest, keyword: e.target.value })}\n                            />\n\n                            <div className=\"input-group-append\">\n                                <button className=\"btn btn-outline-secondary\" type=\"submit\">\n                                    Search\n                                </button>\n                                <button\n                                    className=\"btn btn-outline-secondary\"\n                                    type=\"button\"\n                                    onClick={() => setPageRequest({ size: 10, type: '', location: '', keyword: '' })}\n                                >\n                                    Clear\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n            <div className=\"row mt-3\">\n                <div className=\"col\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">리뷰 목록</div>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">리뷰 목록</h5>\n                            <table className=\"table\">\n                                <thead>\n                                <tr>\n                                    <th scope=\"col\">게시물 번호</th>\n                                    <th scope=\"col\">제목</th>\n                                    <th scope=\"col\">게시자</th>\n                                    <th scope=\"col\">등록날짜</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {responseData.dtoList.map((dto) => (\n                                    <tr key={dto.bno}>\n                                        <td>{dto.bno}</td>\n                                        <td>\n                                            {/* Link 컴포넌트 사용 */}\n                                            <Link to={`/board/read?bno=${dto.bno}`} className=\"text-decoration-none\">\n                                                {dto.title}\n                                            </Link>\n                                            <span className=\"badge\" style={{ backgroundColor: '#0a53be' }}>\n                                                {dto.replyCount}\n                                            </span>\n                                        </td>\n                                        <td>{dto.writer}</td>\n                                        <td>{new Date(dto.regDate).toLocaleDateString()}</td>\n                                    </tr>\n                                ))}\n                                </tbody>\n                            </table>\n\n                            <div className=\"float-end\">\n                                <ul className=\"pagination flex-wrap\">\n                                    {responseData.prev && (\n                                        <li className=\"page-item\">\n                                            <button\n                                                className=\"page-link\"\n                                                onClick={() => handlePageChange(responseData.start - 1)}\n                                            >\n                                                Previous\n                                            </button>\n                                        </li>\n                                    )}\n                                    {Array.from({ length: responseData.end - responseData.start + 1 }).map(\n                                        (_, index) => (\n                                            <li\n                                                className={`page-item ${\n                                                    responseData.page === responseData.start + index ? 'active' : ''\n                                                }`}\n                                                key={index}\n                                            >\n                                                <button\n                                                    className=\"page-link\"\n                                                    onClick={() => handlePageChange(responseData.start + index)}\n                                                >\n                                                    {responseData.start + index}\n                                                </button>\n                                            </li>\n                                        )\n                                    )}\n                                    {responseData.next && (\n                                        <li className=\"page-item\">\n                                            <button\n                                                className=\"page-link\"\n                                                onClick={() => handlePageChange(responseData.end + 1)}\n                                            >\n                                                Next\n                                            </button>\n                                        </li>\n                                    )}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </BasicLayout>\n    );\n}\n\nexport default BoardList;\n"],"names":["Header","_jsxs","className","children","_jsx","Link","to","src","alt","_ref","id","BasicMenu","pageRequest","setPageRequest","useState","size","type","location","keyword","responseData","setResponseData","dtoList","prev","next","start","end","page","useEffect","async","response","axios","get","params","data","error","console","log","fetchData","handlePageChange","pageNum","BasicLayout","onSubmit","e","preventDefault","name","value","onChange","target","onClick","scope","map","dto","bno","title","style","backgroundColor","replyCount","writer","Date","regDate","toLocaleDateString","Array","from","length","_","index"],"sourceRoot":""}