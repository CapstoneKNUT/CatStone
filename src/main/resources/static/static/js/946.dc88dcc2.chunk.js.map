{"version":3,"file":"static/js/946.dc88dcc2.chunk.js","mappings":"uLAMA,MA8ZA,EA9ZkBA,KACd,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAKC,IAAUF,EAAAA,EAAAA,UAAS,KACxBG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,KACpCK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,KACxCO,EAAKC,IAAUR,EAAAA,EAAAA,UAAS,CAAC,IACzBS,EAAMC,IAAWV,EAAAA,EAAAA,UAAS,KAC1BW,EAAWC,IAAgBZ,EAAAA,EAAAA,UAAS,KACpCa,EAAWC,IAAgBd,EAAAA,EAAAA,UAAS,KACpCe,EAASC,IAAchB,EAAAA,EAAAA,UAAS,KAChCiB,EAAYC,IAAiBlB,EAAAA,EAAAA,UAAS,KACtCmB,EAASC,IAAcpB,EAAAA,EAAAA,WAAS,IAChCqB,EAAUC,IAAetB,EAAAA,EAAAA,WAAS,IAClCuB,EAAKC,IAAUxB,EAAAA,EAAAA,WAAS,GAEzByB,GAAmBC,EAAAA,EAAAA,QAAO,MAC1BC,GAAiBD,EAAAA,EAAAA,QAAO,MACxBE,GAAsBF,EAAAA,EAAAA,QAAO,OAC5BG,EAAgBC,IAAqB9B,EAAAA,EAAAA,UAAS,CACjD+B,KAAM,EACNC,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,OAAAA,GACI,IAAID,EAAO,GAEX,MAAM,KAAEJ,EAAI,KAAEC,EAAI,KAAEC,EAAI,QAAEC,GAAYG,KAYtC,OAVAF,GAAQ,QAAQJ,UAAaC,IAEzBC,GAAQA,EAAKK,OAAS,IACtBH,GAAQ,SAASF,KAGjBC,IACAC,GAAQ,YAAYI,mBAAmBL,MAGpCC,CACX,KAEE,KAAEJ,EAAI,KAAEC,EAAI,KAAEC,GAAQJ,EACtBM,EAAON,EAAiBA,EAAeO,UAAY,IAClDI,EAAQC,IAAazC,EAAAA,EAAAA,WAAS,IAErC0C,EAAAA,EAAAA,YAAU,KACNC,IACAC,IACAC,GAAY,GACb,KAEHH,EAAAA,EAAAA,YAAU,KACNI,EAAQ,CAAC7C,MAAI8B,OAAKC,OAAKQ,SAAOP,QAAM,GACrC,CAAChC,EAAI8B,EAAKC,EAAKQ,EAAOP,KAEzBS,EAAAA,EAAAA,YAAU,KACNK,EAAS1B,GACT2B,EAAY3B,EAAS,GACtB,CAACA,KAEJqB,EAAAA,EAAAA,YAAU,KACNO,EAAS1B,GACT2B,EAAY3B,EAAI,GACjB,CAACA,IAEJ,MAAMoB,EAAiBQ,UACnB,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,uCAAuCrD,KACxEC,EAAOkD,EAASG,KAAKtD,IAEzB,CAAE,MAAOuD,GACDA,EAAMJ,UAAsC,MAA1BI,EAAMJ,SAASK,QAEjC7D,EAAS,qCAEb8D,QAAQF,MAAMA,EAClB,GAGEZ,EAAgBO,UAClB,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,kCACjC5C,EAAQ0C,EAASG,MACjBxD,EAAeqD,EAASG,KAAKI,SACjC,CAAE,MAAOH,GACLE,QAAQF,MAAMA,EAClB,GAGEX,EAAaA,KACf,IACI,MAAMe,EAAgB,IAAIC,OAAOC,UAAUC,MAAMtC,EAAiBuC,SAG5DC,EAAsBA,KACxBL,EAAcM,MAAM,EAIlBC,EAA2BA,KAC7BP,EAAcQ,MAAM,EAIlBC,EAAc1C,EAAeqC,QAC7BM,EAAmB1C,EAAoBoC,QAU7C,OARIK,GACAA,EAAYE,iBAAiB,QAASN,GAGtCK,GACAA,EAAiBC,iBAAiB,QAASJ,GAGxC,KACCE,GACAA,EAAYG,oBAAoB,SAAS,IAAMZ,EAAcM,SAE7DtC,EAAoBoC,SACpBpC,EAAoBoC,QAAQQ,oBAAoB,SAAS,IAAMZ,EAAcQ,QACjF,CAER,CAAE,MAAOZ,GACLE,QAAQF,MAAMA,EAClB,GAGEV,EAAUK,UAA4C,IAArC,IAAClD,EAAG,KAAE8B,EAAI,KAAEC,EAAI,OAAEQ,EAAM,KAAEP,GAAKwC,EAClD,IACI,MAAMrB,QAAiBC,EAAAA,EAAMC,IAAI,0CAA0CrD,IAAM,CAC7EyE,OAAQ,CAAC3C,OAAMC,OAAMC,UAGzB,GAAIO,EAAQ,CACR,MAAMmC,EAAQvB,EAASG,KAAKoB,MACtBC,EAAWC,SAASC,KAAKC,KAAKJ,EAAQ3C,GAAO,IAGnD,OAAOc,EAAQ,CAAC7C,IAAKA,EAAK8B,KAAM6C,EAAU5C,KAAMA,EAAMC,KAAMA,GAChE,CACA,OAAOmB,EAASG,IACpB,CAAE,MAAOC,GAEL,MADAE,QAAQF,MAAMA,GACRA,CACV,GAGET,EAAWI,UACb,IAEI,aADuBE,EAAAA,EAAMC,IAAI,qCAAqCjC,IACtDkC,IACpB,CAAE,MAAOC,GAEL,MADAE,QAAQF,MAAMA,GACRA,CACV,GAGEP,EAAWE,UACb,IAEI,aADuBE,EAAAA,EAAMC,IAAI,qCAAqC/B,MACtDgC,IACpB,CAAE,MAAOC,GAEL,MADAE,QAAQF,MAAMA,GACRA,CACV,GAGER,EAAcG,UAChB,IAEI,aADuBE,EAAAA,EAAMC,IAAI,qCAAqCjC,EAASE,MAAOF,IACtEkC,IACpB,CAAE,MAAOC,GAEL,MADAE,QAAQF,MAAMA,GACRA,CACV,GAGEN,EAAcC,UAChB,IAEI,aADuBE,EAAAA,EAAMC,IAAI,qCAAqC/B,MACtDgC,IACpB,CAAE,MAAOC,GAEL,MADAE,QAAQF,MAAMA,GACRA,CACV,GAsCEwB,EAAe7B,eAAOpB,EAAMC,EAAMQ,GAA4B,IAApBP,EAAIgD,UAAA3C,OAAA,QAAA4C,IAAAD,UAAA,GAAAA,UAAA,GAAG,QACnD,IACInC,EAAQ,CAAC7C,MAAK8B,OAAMC,OAAMQ,SAAQP,SAAOkD,MACrC5B,IAtCO6B,KAEf,GAAIA,GAAWA,EAAQ9C,OAAS,EAAG,CAC/B,MAAM+C,EAAWD,EAAQE,KAAI/E,IACzBgF,EAAAA,EAAAA,MAAA,MAAkBC,UAAU,mCAAkCC,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAElF,EAAIgB,OAC7BmE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAQ,WAAUjF,EAAIgB,IAAIkE,SAAElF,EAAIM,aAChD6E,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAElF,EAAIQ,WAC7B2E,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAElF,EAAIoF,YAJxBpF,EAAIgB,OAOjBnB,EAAaiF,EACjB,MACIjF,EAAa,GACjB,EAyBYwF,CAAUrC,EAAK6B,SAtBX7B,KAChB,IAAIsC,EAAU,GAEVtC,EAAKuC,OACLD,GAAW,yDAAyDtC,EAAKwC,MAAQ,4BAGrF,IAAK,IAAIC,EAAIzC,EAAKwC,MAAOC,GAAKzC,EAAK0C,IAAKD,IACpCH,GAAW,wBAAwBG,IAAMzC,EAAKxB,KAAO,SAAW,uCAAuCiE,MAAMA,aAG7GzC,EAAK2C,OACLL,GAAW,yDAAyDtC,EAAK0C,IAAM,4BAGnF3F,EAAeuF,EAAQ,EAQXM,CAAW5C,EAAK,GAG5B,CAAE,MAAOC,GACLE,QAAQF,MAAMA,EAClB,CACJ,EAEAwB,EAAa,EAAE,IAAI,GAoDnB,OACIU,EAAAA,EAAAA,KAAA,OAAKU,MAAM,WAAUX,UACjBF,EAAAA,EAAAA,MAAA,OAAKa,MAAM,MAAKX,SAAA,EAChBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACjBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAC,qCAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,qCACnCC,EAAAA,EAAAA,KAAA,SAAOzD,KAAK,OAAOuD,UAAU,eAAea,MAAO9F,EAAIN,KAAO,GAAIqG,UAAQ,QAE9Ef,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,kBACnCC,EAAAA,EAAAA,KAAA,SAAOzD,KAAK,OAAOuD,UAAU,eAAea,MAAO9F,EAAIgG,OAAS,GAAID,UAAQ,QAEhFf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,kBACnCC,EAAAA,EAAAA,KAAA,YAAUF,UAAU,wBAAwBgB,KAAK,IAAIF,UAAQ,EAAAb,SAAElF,EAAIkG,SAAW,SAElFlB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,wBACnCC,EAAAA,EAAAA,KAAA,SAAOzD,KAAK,OAAOuD,UAAU,eAAea,MAAO9F,EAAImG,QAAU,GAAIJ,UAAQ,QAEjFf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,qCACnCC,EAAAA,EAAAA,KAAA,SAAOzD,KAAK,OAAOuD,UAAU,eAAea,MAAO9F,EAAIoF,SAAW,GAAIW,UAAQ,QAElFf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,qCACnCC,EAAAA,EAAAA,KAAA,SAAOzD,KAAK,OAAOuD,UAAU,eAAea,MAAO9F,EAAIoG,SAAW,GAAIL,UAAQ,QAElFZ,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACjBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,KAAGkB,KAAM,eAAezE,IAAQqD,UAAU,uBAAsBC,UAC5DC,EAAAA,EAAAA,KAAA,UAAQzD,KAAK,SAASuD,UAAU,kBAAiBC,SAAC,mBAErDhF,EAAKkD,WAAapD,EAAImG,SACnBhB,EAAAA,EAAAA,KAAA,KAAGkB,KAAM,qBAAqBrG,EAAIN,OAAOkC,IAAQqD,UAAU,uBAAsBC,UAC7EC,EAAAA,EAAAA,KAAA,UAAQzD,KAAK,SAASuD,UAAU,oBAAmBC,SAAC,2BAMvElF,EAAIsG,WAAatG,EAAIsG,UAAUvE,OAAS,IACrCoD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAChBlF,EAAIsG,UAAUvB,KAAIwB,IACfpB,EAAAA,EAAAA,KAAA,OAAoBF,UAAU,eAAeuB,IAAK,kCAAkCD,IAAYE,IAAI,gBAA1FF,WAK1BpB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACjBC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,eAAeyB,QAASA,IAAMrG,EAAa,YAAY6E,SAAC,iCAE9EC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAC/BtF,UAIbuF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAChBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAyB0B,wBAAyB,CAAEC,OAAQ9G,SAKnE,aAAdM,IACG+E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAsB4B,SAAS,KAAI3B,UAC9CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAC,+BAC5BC,EAAAA,EAAAA,KAAA,UAAQzD,KAAK,SAASuD,UAAU,YAAYyB,QAASA,IAAMrG,EAAa,UAE5E2E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,+BACnCC,EAAAA,EAAAA,KAAA,SAAOzD,KAAK,OAAOuD,UAAU,eAAea,MAAOxF,EAAWwG,SAAUC,GAAKxG,EAAawG,EAAEC,OAAOlB,aAEvGd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,qCACnCC,EAAAA,EAAAA,KAAA,SAAOzD,KAAK,OAAOuD,UAAU,eAAea,MAAO5F,EAAKkD,SAAU2C,UAAQ,WAGlFf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAQzD,KAAK,SAASuD,UAAU,oBAAoByB,QAASA,IAAMrG,EAAa,IAAI6E,SAAC,kBACrFC,EAAAA,EAAAA,KAAA,UAAQzD,KAAK,SAASuD,UAAU,kBAAkByB,QA1IvD9D,UACnB,IACI,MAAM9B,EAAW,CAAEpB,MAAKY,YAAWE,iBAC7BsC,EAAAA,EAAMmE,KAAK,qCAAsCnG,GACvDoG,MAAMpG,EAASpB,IAAM,kEACrBa,EAAa,IACbE,EAAW,IACXgE,EAAa,EAAG,IAAI,EACxB,CAAE,MAAOxB,GACLiE,MAAM,6DACV,GAgIkGhC,SAAC,2BAQhF,WAAd9E,IACG+E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAoB4B,SAAS,KAAI3B,UAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAC,+BAC5BC,EAAAA,EAAAA,KAAA,UAAQzD,KAAK,SAASuD,UAAU,YAAYyB,QAASA,IAAMrG,EAAa,UAE5E8E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACvBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,+BACnCC,EAAAA,EAAAA,KAAA,SAAOzD,KAAK,OAAOuD,UAAU,eAAea,MAAOpF,EAAYoG,SAAUC,GAAKpG,EAAcoG,EAAEC,OAAOlB,eAG7Gd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAQzD,KAAK,SAASuD,UAAU,oBAAoByB,QAASA,IAAMrG,EAAa,IAAI6E,SAAC,kBACrFC,EAAAA,EAAAA,KAAA,UAAQzD,KAAK,SAASuD,UAAU,kBAAkByB,QArJpD9D,UACtB,GAAKhC,EAKL,IACI,MAAME,EAAW,CAAEpB,MAAKsB,IAAKhB,EAAIgB,IAAKV,UAAWI,SAC3CoC,EAAAA,EAAMqE,IAAI,qCAAqCnH,EAAIgB,MAAOF,GAChEoG,MAAMpG,EAASE,IAAK,kEACpBL,EAAc,IACd8D,EAAajD,EAAKC,EACtB,CAAE,MAAOwB,GACLE,QAAQF,MAAMA,EAClB,MAZIiE,MAAM,2FAYV,EAuIqGhC,SAAC,kBAC9EC,EAAAA,EAAAA,KAAA,UAAQzD,KAAK,SAASuD,UAAU,iBAAiByB,QArInD9D,UACtB,GAAKhC,EAKL,UACUkC,EAAAA,EAAMsE,OAAO,qCAAqCpH,EAAIgB,OAC5DkG,MAAM,kEACNvG,EAAc,IACdY,GAAkB8F,IAAS,IACpBA,EACH7F,KAAM,MAEViD,EAAajD,EAAMC,EACvB,CAAE,MAAOwB,GACLE,QAAQF,MAAMA,EAClB,MAfIiE,MAAM,2FAeV,EAoHoGhC,SAAC,+BAOtE,C","sources":["pages/board/read.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\n\nconst BoardRead = () => {\n    const navigate = useNavigate();\n    const [currentUser, setCurrentUser] = useState('');\n    const [bno, setBno] = useState('');\n    const [replyList, setReplyList] = useState([]);\n    const [replyPaging, setReplyPaging] = useState([]);\n    const [dto, setDto] = useState({});\n    const [user, setUser] = useState('');\n    const [modalType, setModalType] = useState('');\n    const [replyText, setReplyText] = useState('');\n    const [replyer, setReplyer] = useState('');\n    const [modifyText, setModifyText] = useState('');\n    const [hasAuth, setHasAuth] = useState(false);\n    const [replyObj, setReplyObj] = useState(false);\n    const [rno, setRno] = useState(false);\n\n    const registerModalRef = useRef(null);\n    const addReplyBtnRef = useRef(null);\n    const closeRegisterBtnRef = useRef(null);\n    const [pageRequestDTO, setPageRequestDTO] = useState({\n        page: 1,\n        size: 10,\n        type: '',\n        keyword: '',\n        link: '',\n        getLink() {\n            let link = '';\n\n            const { page, size, type, keyword } = this;\n\n            link += `page=${page}&size=${size}`;\n\n            if (type && type.length > 0) {\n                link += `&type=${type}`;\n            }\n\n            if (keyword) {\n                link += `&keyword=${encodeURIComponent(keyword)}`;\n            }\n\n            return link;\n        }\n    });\n    const { page, size, type} = pageRequestDTO;\n    const link = pageRequestDTO ? pageRequestDTO.getLink() : '';\n    const [goLast, setGoLast] = useState(false);\n\n    useEffect(() => {\n        fetchBoardData();\n        fetchUserData();\n        fetchModal();\n    }, []);\n\n    useEffect(() => {\n        getList({bno,page,size,goLast,type});\n    }, [bno,page,size,goLast,type]);\n\n    useEffect(() => {\n        addReply(replyObj);\n        modifyReply(replyObj);\n    }, [replyObj]);\n\n    useEffect(() => {\n        getReply(rno);\n        removeReply(rno);\n    }, [rno]);\n\n    const fetchBoardData = async () => {\n        try {\n            const response = await axios.get(`http://localhost:8080/api/board/read${bno}`);\n            setBno(response.data.bno);\n            // printReplies(1, 10, true);\n        } catch (error) {\n            if (error.response && error.response.status === 400) {\n                // 서버에서 400 응답을 받은 경우, 리다이렉트\n                navigate('/member/login?error=ACCESS_DENIED');\n            }\n            console.error(error);\n        }\n    };\n\n    const fetchUserData = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/api/user');\n            setUser(response.data);\n            setCurrentUser(response.data.username);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const fetchModal = () => {\n        try {\n            const registerModal = new window.bootstrap.Modal(registerModalRef.current);\n\n            // 댓글 추가 버튼 클릭 시 모달 표시\n            const handleAddReplyClick = () => {\n                registerModal.show();\n            };\n\n            // 닫기 버튼 클릭 시 모달 숨기기\n            const handleCloseRegisterClick = () => {\n                registerModal.hide();\n            };\n\n            // 이벤트 리스너 설정\n            const addReplyBtn = addReplyBtnRef.current;\n            const closeRegisterBtn = closeRegisterBtnRef.current;\n\n            if (addReplyBtn) {\n                addReplyBtn.addEventListener('click', handleAddReplyClick);\n            }\n\n            if (closeRegisterBtn) {\n                closeRegisterBtn.addEventListener('click', handleCloseRegisterClick);\n            }\n\n            return () => {\n                if (addReplyBtn) {\n                    addReplyBtn.removeEventListener('click', () => registerModal.show());\n                }\n                if (closeRegisterBtnRef.current) {\n                    closeRegisterBtnRef.current.removeEventListener('click', () => registerModal.hide());\n                }\n            };\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const getList = async ({bno, page, size, goLast, type}) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/api/replies/list/${bno}`,{\n                params: {page, size, type}\n            });\n\n            if (goLast) {\n                const total = response.data.total;\n                const lastPage = parseInt(Math.ceil(total / size), 10);\n\n                // 마지막 페이지를 요청하여 재귀 호출\n                return getList({bno: bno, page: lastPage, size: size, type: type});\n            }\n            return response.data\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n    };\n\n    const addReply = async (replyObj) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/api/replies/`,replyObj)\n            return response.data\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n    };\n\n    const getReply = async (rno) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/api/replies/${rno}`)\n            return response.data\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n    };\n\n    const modifyReply = async (replyObj) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/api/replies/${replyObj.rno}`, replyObj)\n            return response.data\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n    };\n\n    const removeReply = async (rno) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/api/replies/${rno}`)\n            return response.data\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n    };\n\n    const printList = (dtoList) => {\n\n        if (dtoList && dtoList.length > 0) {\n            const listHtml = dtoList.map(dto => (\n                <li key={dto.rno} className=\"list-group-item d-flex replyItem\">\n                    <span className=\"col-2\">{dto.rno}</span>\n                    <span className=\"col-6\" data-rno={dto.rno}>{dto.replyText}</span>\n                    <span className=\"col-2\">{dto.replyer}</span>\n                    <span className=\"col-2\">{dto.regDate}</span>\n                </li>\n            ));\n            setReplyList(listHtml);\n        } else {\n            setReplyList([]);\n        }\n    };\n\n    const printPages = (data) => {\n        let pageStr = '';\n\n        if (data.prev) {\n            pageStr += `<li class=\"page-item\"><a class=\"page-link\" data-page=\"${data.start - 1}\">이전</a></li>`;\n        }\n\n        for (let i = data.start; i <= data.end; i++) {\n            pageStr += `<li class=\"page-item ${i === data.page ? 'active' : ''}\"><a class=\"page-link\" data-page=\"${i}\">${i}</a></li>`;\n        }\n\n        if (data.next) {\n            pageStr += `<li class=\"page-item\"><a class=\"page-link\" data-page=\"${data.end + 1}\">다음</a></li>`;\n        }\n\n        setReplyPaging(pageStr);\n    };\n\n    const printReplies = async (page, size, goLast, type = 'board') => {\n        try {\n            getList({bno, page, size, goLast, type}).then(\n                data => {\n                    printList(data.dtoList); //목록 처리\n                    printPages(data);\n                }\n            )\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    printReplies(1,10, true)\n\n    const handleRegister = async () => {\n        try {\n            const replyObj = { bno, replyText, replyer };\n            await axios.post('http://localhost:8080/api/replies/', replyObj);\n            alert(replyObj.bno + '댓글이 등록되었습니다.');\n            setReplyText('');\n            setReplyer('');\n            printReplies(1, 10, true);\n        } catch (error) {\n            alert('댓글 등록 중 오류 발생');\n        }\n    };\n\n    const handleModifyReply = async () => {\n        if (!hasAuth) {\n            alert('댓글 작성자만 수정이 가능합니다.');\n            return;\n        }\n\n        try {\n            const replyObj = { bno, rno: dto.rno, replyText: modifyText };\n            await axios.put(`http://localhost:8080/api/replies/${dto.rno}`, replyObj);\n            alert(replyObj.rno +'댓글이 수정되었습니다.');\n            setModifyText('');\n            printReplies(page,size);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const handleRemoveReply = async () => {\n        if (!hasAuth) {\n            alert('댓글 작성자만 삭제가 가능합니다.');\n            return;\n        }\n\n        try {\n            await axios.delete(`http://localhost:8080/api/replies/${dto.rno}`);\n            alert('댓글이 삭제되었습니다.');\n            setModifyText('');\n            setPageRequestDTO(prevState => ({\n                ...prevState,  // 이전 상태를 복사\n                page: 1        // page 값을 1로 업데이트\n            }));\n            printReplies(page, size);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <div class=\"row mt-3\">\n            <div class=\"col\">\n            <div className=\"card\">\n                <div className=\"card-header\">게시글 읽기</div>\n                <div className=\"card-body\">\n                    <div className=\"input-group mb-3\">\n                        <span className=\"input-group-text\">게시물 번호</span>\n                        <input type=\"text\" className=\"form-control\" value={dto.bno || ''} readOnly />\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <span className=\"input-group-text\">제목</span>\n                        <input type=\"text\" className=\"form-control\" value={dto.title || ''} readOnly />\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <span className=\"input-group-text\">내용</span>\n                        <textarea className=\"form-control col-sm-5\" rows=\"5\" readOnly>{dto.content || ''}</textarea>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <span className=\"input-group-text\">작성자</span>\n                        <input type=\"text\" className=\"form-control\" value={dto.writer || ''} readOnly />\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <span className=\"input-group-text\">게시한 날짜</span>\n                        <input type=\"text\" className=\"form-control\" value={dto.regDate || ''} readOnly />\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <span className=\"input-group-text\">수정한 날짜</span>\n                        <input type=\"text\" className=\"form-control\" value={dto.modDate || ''} readOnly />\n                    </div>\n                    <div className=\"my-4\">\n                        <div className=\"float-end\">\n                            <a href={`/board/list?${link}`} className=\"text-decoration-none\">\n                                <button type=\"button\" className=\"btn btn-primary\">목록</button>\n                            </a>\n                            {user.username === dto.writer && (\n                                <a href={`/board/modify?bno=${dto.bno}&${link}`} className=\"text-decoration-none\">\n                                    <button type=\"button\" className=\"btn btn-secondary\">수정</button>\n                                </a>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                {dto.fileNames && dto.fileNames.length > 0 && (\n                    <div className=\"card\">\n                        {dto.fileNames.map(fileName => (\n                            <img key={fileName} className=\"card-img-top\" src={`http://localhost:8080/api/view/${fileName}`} alt=\"파일\" />\n                        ))}\n                    </div>\n                )}\n            </div>\n            <div className=\"row mt-3\">\n                <div className=\"col-md-12\">\n                    <div className=\"my-4\">\n                        <button className=\"btn btn-info\" onClick={() => setModalType('register')}>댓글 작성</button>\n                    </div>\n                    <ul className=\"list-group replyList\">\n                        {replyList}\n                    </ul>\n                </div>\n            </div>\n            <div className=\"row mt-3\">\n                <div className=\"col\">\n                    <ul className=\"pagination replyPaging\" dangerouslySetInnerHTML={{ __html: replyPaging }} />\n                </div>\n            </div>\n\n            {/* Register Modal */}\n            {modalType === 'register' && (\n                <div className=\"modal registerModal\" tabIndex=\"-1\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">댓글 등록</h5>\n                                <button type=\"button\" className=\"btn-close\" onClick={() => setModalType('')}></button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"input-group mb-3\">\n                                    <span className=\"input-group-text\">댓글 내용</span>\n                                    <input type=\"text\" className=\"form-control\" value={replyText} onChange={e => setReplyText(e.target.value)} />\n                                </div>\n                                <div className=\"input-group mb-3\">\n                                    <span className=\"input-group-text\">댓글 작성자</span>\n                                    <input type=\"text\" className=\"form-control\" value={user.username} readOnly />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setModalType('')}>취소</button>\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={handleRegister}>등록</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Modify Modal */}\n            {modalType === 'modify' && (\n                <div className=\"modal modifyModal\" tabIndex=\"-1\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">댓글 수정</h5>\n                                <button type=\"button\" className=\"btn-close\" onClick={() => setModalType('')}></button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"input-group mb-3\">\n                                    <span className=\"input-group-text\">댓글 내용</span>\n                                    <input type=\"text\" className=\"form-control\" value={modifyText} onChange={e => setModifyText(e.target.value)} />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setModalType('')}>취소</button>\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={handleModifyReply}>수정</button>\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={handleRemoveReply}>삭제</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n            </div>\n        </div>/* layout fragment end */\n    );\n};\n\nexport default BoardRead;"],"names":["BoardRead","navigate","useNavigate","currentUser","setCurrentUser","useState","bno","setBno","replyList","setReplyList","replyPaging","setReplyPaging","dto","setDto","user","setUser","modalType","setModalType","replyText","setReplyText","replyer","setReplyer","modifyText","setModifyText","hasAuth","setHasAuth","replyObj","setReplyObj","rno","setRno","registerModalRef","useRef","addReplyBtnRef","closeRegisterBtnRef","pageRequestDTO","setPageRequestDTO","page","size","type","keyword","link","getLink","this","length","encodeURIComponent","goLast","setGoLast","useEffect","fetchBoardData","fetchUserData","fetchModal","getList","addReply","modifyReply","getReply","removeReply","async","response","axios","get","data","error","status","console","username","registerModal","window","bootstrap","Modal","current","handleAddReplyClick","show","handleCloseRegisterClick","hide","addReplyBtn","closeRegisterBtn","addEventListener","removeEventListener","_ref","params","total","lastPage","parseInt","Math","ceil","printReplies","arguments","undefined","then","dtoList","listHtml","map","_jsxs","className","children","_jsx","regDate","printList","pageStr","prev","start","i","end","next","printPages","class","value","readOnly","title","rows","content","writer","modDate","href","fileNames","fileName","src","alt","onClick","dangerouslySetInnerHTML","__html","tabIndex","onChange","e","target","post","alert","put","delete","prevState"],"sourceRoot":""}